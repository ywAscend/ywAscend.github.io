<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>芸伟</title>
  
  <subtitle>与其临渊羡鱼，不如退而结网</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/ywAscend/"/>
  <updated>2020-03-14T16:08:58.911Z</updated>
  <id>https://github.com/ywAscend/</id>
  
  <author>
    <name>ywAscend</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>根据路径从嵌套的js对象中取值</title>
    <link href="https://github.com/ywAscend/2020/03/14/%E6%A0%B9%E6%8D%AE%E8%B7%AF%E5%BE%84%E4%BB%8E%E5%B5%8C%E5%A5%97%E7%9A%84js%E5%AF%B9%E8%B1%A1%E4%B8%AD%E5%8F%96%E5%80%BC/"/>
    <id>https://github.com/ywAscend/2020/03/14/%E6%A0%B9%E6%8D%AE%E8%B7%AF%E5%BE%84%E4%BB%8E%E5%B5%8C%E5%A5%97%E7%9A%84js%E5%AF%B9%E8%B1%A1%E4%B8%AD%E5%8F%96%E5%80%BC/</id>
    <published>2020-03-14T15:13:10.000Z</published>
    <updated>2020-03-14T16:08:58.911Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>根据一个路径从嵌套的js对象中取出值，如果路径不存在则返回null，路径类型为字符串数组</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">eg:</span><br><span class="line">  path = [&apos;a&apos;,&apos;b&apos;] //路径</span><br><span class="line">  obj = &#123; a: &#123; b:2 &#125; &#125;</span><br></pre></td></tr></table></figure><p>思考: 用字符串数组中的value值,作为的key,并取对象的key的值，如果有值则说明路径值存在。此时需继续取数组中的value值，作为key去匹配上一个value匹配到的对象值，即要递归调用。既然是递归，那么问题来了，递归必须要有一个终止条件，否则会造成栈溢出。这时当取到字符串最后一个值时，如果匹配到值，则为对应的值，如果没有匹配到值则返回null,此时所取的字符串数组为最后一个值时就是终止递归的条件。</p><p>coding :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">let path = [&apos;a&apos;,&apos;b&apos;]</span><br><span class="line">let obj = &#123; a: &#123; b:2 &#125;&#125;</span><br><span class="line"></span><br><span class="line">function getDeep ( arr,obj ) &#123;</span><br><span class="line">  let strArr = arr.slice(1) </span><br><span class="line">  let subObj = obj[path[0]]</span><br><span class="line">  if ( arr.length&gt;1 &amp;&amp; obj[arr[0]] ) &#123;</span><br><span class="line">    getDeep ( strArr,subObj )</span><br><span class="line">  &#125; else if (arr.length === 1) &#123;</span><br><span class="line">    console.log(&apos;匹配到的路径值&apos;, subObj == undefined ? &apos;null&apos; : subObj)</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getDeep ( path, obj ) // 匹配到的路径值:2</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;script class=&quot;meting-secondary-script-marker&quot; src=&quot;\assets\js\Meting.min.js&quot;&gt;&lt;/script&gt;&lt;p&gt;根据一个路径从嵌套的js对象中取出值，如果路径不存在则返回null，路径类型为字符串数组&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://github.com/ywAscend/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://github.com/ywAscend/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>如何在小程序中使用fontAwesome</title>
    <link href="https://github.com/ywAscend/2020/03/08/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%BD%BF%E7%94%A8fontAwesome/"/>
    <id>https://github.com/ywAscend/2020/03/08/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%BD%BF%E7%94%A8fontAwesome/</id>
    <published>2020-03-08T06:29:39.000Z</published>
    <updated>2020-03-08T07:53:58.207Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>之前在写小程序时，遇到的字体图标引用的问题，在此记录一下。</p><a id="more"></a><h3 id="原生小程序中使用方法："><a href="#原生小程序中使用方法：" class="headerlink" title="原生小程序中使用方法："></a>原生小程序中使用方法：</h3><p>第一步：官网下载font awesome 下载字体图标压缩包，注意版本为V4.7以下。<br>1.1 fontAwesome官网地址:<a href="http://www.fontawesome.com.cn/" target="_blank" rel="noopener">http://www.fontawesome.com.cn/</a></p><p>第二步：将fontAwesome字体实体转为base64编码文件<br>2.1 解压下载的压缩包找到fontawesome-webfont.ttf文件。<br>压缩包解压–&gt;fonts–&gt;fontawesome-webfont.ttf<br><img src="/images/ft-ttf.png" alt></p><p>2.2 将fontawesome-webfont.ttf文件转为base64编码<br>打开 <a href="https://transfonter.org/" target="_blank" rel="noopener">转码网址</a>,可在线进行转码。<br><img src="/images/ft-upload.png" alt></p><p>下载转码后的压缩包文件<br><img src="/images/base-success.png" alt></p><p>2.3解压转码后的压缩包，打开style.css文件<br><img src="/images/base-stylecss.jpg" alt><br><img src="/images/style-css.jpg" alt></p><p>第三步：获取编码后的最新的font-awesome<br>3.1 打开步骤一中，下载的字体压缩包，找到font-awesome.css文件<br>步骤一下载的压缩包–&gt; css –&gt; font-awesome.css</p><p>3.2 打开 font-awesome.css，删除文件中中 @font-face 及其内容。<br><img src="/images/delete.jpg" alt></p><p>3.3 将2.3中的style.css文件中的内容复制到3.2中，删除@font-face后的的font-awesome.css内容的最上方。</p><p>3.4 此时的font-awesome.css便是我们要在小程序中引用的fontAwesome的样式文件。</p><p>第四步：在原生小程序中引用font-awesome.css<br>为方便起见，这里全局引入。在小程序的app.wxss中直接引入： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//(xx为你的文件路径)</span><br><span class="line">@import &quot;/xx/font-awesome.wxss&quot;</span><br></pre></td></tr></table></figure><p>使用示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;text class=&quot;fa fa-star-o&quot;&gt;&lt;/text&gt;</span><br></pre></td></tr></table></figure><h3 id="mpvue中使用fontAwesome"><a href="#mpvue中使用fontAwesome" class="headerlink" title="mpvue中使用fontAwesome"></a>mpvue中使用fontAwesome</h3><p>mpvue支持模块化下载，直接安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install font-awesome</span><br></pre></td></tr></table></figure><p>然后在主应用的main.js中全局引入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import &apos;font-awesome/css/font-awesome.min.css&apos;;</span><br></pre></td></tr></table></figure><p>应用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=&quot;fa fa-eye&quot;&gt;&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>这样就可以在组件中愉快的使用想要的字体图标了。</p>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;script class=&quot;meting-secondary-script-marker&quot; src=&quot;\assets\js\Meting.min.js&quot;&gt;&lt;/script&gt;&lt;p&gt;之前在写小程序时，遇到的字体图标引用的问题，在此记录一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="小程序" scheme="https://github.com/ywAscend/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="小程序" scheme="https://github.com/ywAscend/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>vue+ts中给Vue拓展属性</title>
    <link href="https://github.com/ywAscend/2019/12/23/vue-ts%E4%B8%AD%E7%BB%99Vue%E6%8B%93%E5%B1%95%E5%B1%9E%E6%80%A7/"/>
    <id>https://github.com/ywAscend/2019/12/23/vue-ts%E4%B8%AD%E7%BB%99Vue%E6%8B%93%E5%B1%95%E5%B1%9E%E6%80%A7/</id>
    <published>2019-12-23T02:57:04.000Z</published>
    <updated>2019-12-23T03:11:54.145Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>在vue+ts项目中通过prototype给Vue拓展属性时，发现拓展的属性无法获取到，查<a href="'https://vuejs.bootcss.com/v2/guide/typescript.html#%E5%9F%BA%E4%BA%8E%E7%B1%BB%E7%9A%84-Vue-%E7%BB%84%E4%BB%B6'">文档</a>后发现需要进行类型声明.</p><a id="more"></a><p>解决方案如下：</p><p>在src/目录下新建一个 .d.ts 文件,如：my-property.d.ts</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 1. 确保在声明补充的类型之前导入 &apos;vue&apos;</span><br><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line"></span><br><span class="line">// 2. 定制一个文件，设置你想要补充的类型</span><br><span class="line">//    在 types/vue.d.ts 里 Vue 有构造函数类型</span><br><span class="line">declare module &apos;vue/types/vue&apos; &#123;</span><br><span class="line">// 3. 声明为 Vue 补充的东西</span><br><span class="line">  interface Vue &#123;</span><br><span class="line">    $myMgr: string</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若还是报错，重启编辑器即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;script class=&quot;meting-secondary-script-marker&quot; src=&quot;\assets\js\Meting.min.js&quot;&gt;&lt;/script&gt;&lt;p&gt;在vue+ts项目中通过prototype给Vue拓展属性时，发现拓展的属性无法获取到，查&lt;a href=&quot;&#39;https://vuejs.bootcss.com/v2/guide/typescript.html#%E5%9F%BA%E4%BA%8E%E7%B1%BB%E7%9A%84-Vue-%E7%BB%84%E4%BB%B6&#39;&quot;&gt;文档&lt;/a&gt;后发现需要进行类型声明.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="https://github.com/ywAscend/categories/Vue/"/>
    
    
      <category term="Vue" scheme="https://github.com/ywAscend/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>vue-cli3.0 配置postcss-px2rem</title>
    <link href="https://github.com/ywAscend/2019/12/09/use-postcss-px2rem/"/>
    <id>https://github.com/ywAscend/2019/12/09/use-postcss-px2rem/</id>
    <published>2019-12-09T03:05:53.000Z</published>
    <updated>2019-12-23T02:52:54.599Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h4><p>rem相对于根html,em相对于父级<br>现在常用的适配rem的方法：<br>方法一：<br>1、获取页面宽度</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let deviceWith = document.documentElement.getBoundingClientRect().width</span><br></pre></td></tr></table></figure><p>2.设置根html的font-size</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//100为参照，之所以取一个100作为参照，是为了计算rem方便</span><br><span class="line">document.documentElement.style.fontSize = deviceWith /&apos;设计稿的宽度&apos; /100 + &apos;px&apos;;</span><br></pre></td></tr></table></figure><p>3.配合媒体查询使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@media screen and (max-width:321px)&#123;</span><br><span class="line">    .m-navlist&#123;font-size:15px&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@media screen and (min-width:321px) and (max-width:400px)&#123;</span><br><span class="line">    .m-navlist&#123;font-size:16px&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@media screen and (min-width:400px)&#123;</span><br><span class="line">    .m-navlist&#123;font-size:18px&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：<br>1.设置html的font-size为62.5%,这样1rem就等于10px,方便计算</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">html&#123;</span><br><span class="line">  font-size:62.5%</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.重置样式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">/*reset css*/</span><br><span class="line">body,dl,dd,ul,ol,h1,h2,h3,h4,h5,h6,pre,form,input,textarea,p,hr,thead,tbody,tfoot,th,td&#123;margin:0;padding:0;&#125;</span><br><span class="line">ul,ol&#123;list-style:none;&#125;</span><br><span class="line">a&#123;text-decoration:none;&#125;</span><br><span class="line">html&#123;-ms-text-size-adjust:none;-webkit-text-size-adjust:none;text-size-adjust:none;font-size:50px;&#125;</span><br><span class="line">body&#123;line-height:1.5;font-size:16px;&#125;</span><br><span class="line">body,button,input,select,textarea&#123;font-family:&apos;helvetica neue&apos;,tahoma,&apos;hiragino sans gb&apos;,stheiti,&apos;wenquanyi micro hei&apos;,5FAE8F6F96C59ED1,5B8B4F53,sans-serif;&#125;</span><br><span class="line">b,strong&#123;font-weight:bold;&#125;</span><br><span class="line">i,em&#123;font-style:normal;&#125;</span><br><span class="line">table&#123;border-collapse:collapse;border-spacing:0;&#125;</span><br><span class="line">table th,table td&#123;border:1px solid #ddd;padding:5px;&#125;</span><br><span class="line">table th&#123;font-weight:inherit;border-bottom-width:2px;border-bottom-color:#ccc;&#125;</span><br><span class="line">img&#123;border:0 none;width:auto;max-width:100%;vertical-align:top;&#125;</span><br><span class="line">button,input,select,textarea&#123;font-family:inherit;font-size:100%;margin:0;vertical-align:baseline;&#125;</span><br><span class="line">button,html input[type=&quot;button&quot;],input[type=&quot;reset&quot;],input[type=&quot;submit&quot;]&#123;-webkit-appearance:button;cursor:pointer;&#125;</span><br><span class="line">button[disabled],input[disabled]&#123;cursor:default;&#125;</span><br><span class="line">input[type=&quot;checkbox&quot;],input[type=&quot;radio&quot;]&#123;box-sizing:border-box;padding:0;&#125;</span><br><span class="line">input[type=&quot;search&quot;]&#123;-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;&#125;</span><br><span class="line">input[type=&quot;search&quot;]::-webkit-search-decoration&#123;-webkit-appearance:none;&#125;</span><br><span class="line">@media screen and (-webkit-min-device-pixel-ratio:0)&#123;</span><br><span class="line">    input&#123;line-height:normal!important;&#125;</span><br><span class="line">&#125;</span><br><span class="line">select[size],select[multiple],select[size][multiple]&#123;border:1px solid #AAA;padding:0;&#125;</span><br><span class="line">article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary&#123;display:block;&#125;</span><br><span class="line">audio,canvas,video,progress&#123;display:inline-block;&#125;</span><br></pre></td></tr></table></figure><p>淘宝rem适配方案：<br>1.动态设置viewport的scale</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var scale = 1 / devicePixelRatio;</span><br><span class="line">document.querySelector(&apos;meta[name=&quot;viewport&quot;]&apos;).setAttribute(&apos;content&apos;,&apos;initial-scale=&apos; + scale + &apos;, maximum-scale=&apos; + scale + &apos;, minimum-scale=&apos; + scale + &apos;, user-scalable=no&apos;);</span><br></pre></td></tr></table></figure><p>2.动态计算html的font-size</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.documentElement.style.fontSize = document.documentElement.clientWidth / 10 + &apos;px&apos;;</span><br></pre></td></tr></table></figure><p>3.布局的时候，各元素的css尺寸=设计稿标注尺寸/设计稿横向分辨率/10<br>4.font-size可能需要额外的媒介查询，并且font-size不使用rem</p><h4 id="使用第三方插件-postcss-px2rem"><a href="#使用第三方插件-postcss-px2rem" class="headerlink" title="使用第三方插件 postcss-px2rem"></a>使用第三方插件 postcss-px2rem</h4><h5 id="安装postcss-px2rem"><a href="#安装postcss-px2rem" class="headerlink" title="安装postcss-px2rem"></a>安装postcss-px2rem</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install postcss-px2rem --save</span><br></pre></td></tr></table></figure><h5 id="vue-congfig-js-中配置"><a href="#vue-congfig-js-中配置" class="headerlink" title="vue.congfig.js 中配置"></a>vue.congfig.js 中配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const px2rem = require(&apos;postcss-px2rem&apos;)</span><br><span class="line">const postcss = px2rem(&#123;</span><br><span class="line">  remUnit: 100,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  css: &#123;</span><br><span class="line">    loaderOptions: &#123;</span><br><span class="line">      postcss: &#123;</span><br><span class="line">        plugins: [</span><br><span class="line">          postcss,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;script class=&quot;meting-secondary-script-marker&quot; src=&quot;\assets\js\Meting.min.js&quot;&gt;&lt;/script&gt;&lt;h4 id=&quot;rem&quot;&gt;&lt;a href=&quot;#rem&quot; class=&quot;headerlink&quot; title=&quot;rem&quot;&gt;&lt;/a&gt;rem&lt;/h4&gt;&lt;p&gt;rem相对于根html,em相对于父级&lt;br&gt;现在常用的适配rem的方法：&lt;br&gt;方法一：&lt;br&gt;1、获取页面宽度&lt;/p&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="https://github.com/ywAscend/categories/Vue/"/>
    
    
      <category term="Vue" scheme="https://github.com/ywAscend/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Next配置live2d 看板娘</title>
    <link href="https://github.com/ywAscend/2019/12/01/use-live2d/"/>
    <id>https://github.com/ywAscend/2019/12/01/use-live2d/</id>
    <published>2019-12-01T06:36:24.000Z</published>
    <updated>2019-12-01T14:18:17.024Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="使用Next内置的live2d（基础版）"><a href="#使用Next内置的live2d（基础版）" class="headerlink" title="使用Next内置的live2d（基础版）"></a>使用Next内置的live2d（基础版）</h4><a id="more"></a><h5 id="安装live2d模块"><a href="#安装live2d模块" class="headerlink" title="安装live2d模块"></a>安装live2d模块</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><h5 id="站点配置文件-config-yml-中新增："><a href="#站点配置文件-config-yml-中新增：" class="headerlink" title="站点配置文件_config.yml 中新增："></a>站点配置文件_config.yml 中新增：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: false</span><br><span class="line">  debug: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br><span class="line">  react:</span><br><span class="line">    opacity: 0.7</span><br></pre></td></tr></table></figure><p>配置完以上步骤，清缓存，重新启动项目，刷新页面就可以看到博客右下角有个萌萌的站宠了。</p><h5 id="更换live2d模型"><a href="#更换live2d模型" class="headerlink" title="更换live2d模型"></a>更换live2d模型</h5><h6 id="安装模型对应的包名packagename"><a href="#安装模型对应的包名packagename" class="headerlink" title="安装模型对应的包名packagename"></a>安装模型对应的包名packagename</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-packagename  //packagename是要安装的包名</span><br></pre></td></tr></table></figure><p>效果参考：<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">模型效果</a><br>全部包名用法：<a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md">npm 模块名</a></p><h6 id="使用新模型"><a href="#使用新模型" class="headerlink" title="使用新模型"></a>使用新模型</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model:</span><br><span class="line">    use: live2d-widget-model-packagename  #packagename改为新安装的模块名即可</span><br></pre></td></tr></table></figure><h4 id="高级版"><a href="#高级版" class="headerlink" title="高级版"></a>高级版</h4><p>具有换装、对话、换人等功能。<br>下载大神定制的作品：<a href="https://github.com/stevenjoezhang/live2d-widget">传送门</a><br>下载后解压并重新命名到 \themes\next\source 文件夹下，修改解压后文件中的 autoload.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;;</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const live2d_path = &quot;/重新命名的文件名/&quot;;</span><br></pre></td></tr></table></figure><p>在/themes/next/layout/_layout.swing中,body标签中新增如下内容，将yourName修改为自己的github账号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;https://yourName.github.io/live2d/autoload.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>head标签中新增依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;/&gt;</span><br></pre></td></tr></table></figure><p>在主题配置文件_config.yml 中,添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p>执行命令三连：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo c </span><br><span class="line">hexo g </span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>至此一个萌萌的站板娘就生成了。<br><img src="/images/live2d.png" alt></p><p>还可根据需要自行修改：<br>waifu.css修改看板的大小和位置，waifu-tips.json修改对话</p><h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><p><a href="https://www.jianshu.com/p/dba9a729fa57" target="_blank" rel="noopener">在hexo+next博客添加一个live2d看板娘</a><br><a href="https://blog.csdn.net/qq_39610915/article/details/90679768" target="_blank" rel="noopener">Hexo博客优化：在Next主题中设置进阶版Live2D看板娘</a></p>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;script class=&quot;meting-secondary-script-marker&quot; src=&quot;\assets\js\Meting.min.js&quot;&gt;&lt;/script&gt;&lt;h4 id=&quot;使用Next内置的live2d（基础版）&quot;&gt;&lt;a href=&quot;#使用Next内置的live2d（基础版）&quot; class=&quot;headerlink&quot; title=&quot;使用Next内置的live2d（基础版）&quot;&gt;&lt;/a&gt;使用Next内置的live2d（基础版）&lt;/h4&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://github.com/ywAscend/categories/Hexo/"/>
    
    
      <category term="next" scheme="https://github.com/ywAscend/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>Next 使用 valine 评论模块</title>
    <link href="https://github.com/ywAscend/2019/11/28/use-valine/"/>
    <id>https://github.com/ywAscend/2019/11/28/use-valine/</id>
    <published>2019-11-28T05:39:30.000Z</published>
    <updated>2019-11-28T06:45:06.090Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="注册LeanCloude账号"><a href="#注册LeanCloude账号" class="headerlink" title="注册LeanCloude账号"></a>注册LeanCloude账号</h3><a id="more"></a><p>官网传送门： <a href="https://leancloud.cn" target="_blank" rel="noopener">LeanCloude</a></p><h3 id="LeanCloude配置"><a href="#LeanCloude配置" class="headerlink" title="LeanCloude配置"></a>LeanCloude配置</h3><h4 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h4><p>点击创建应用<br><img src="/images/step1.png" alt><br>自己取一个应用名<br><img src="/images/step2.png" alt></p><h4 id="创建一个类"><a href="#创建一个类" class="headerlink" title="创建一个类"></a>创建一个类</h4><p>前面应用已经创建完毕，需要创建一个类Comment来存放评论信息。<br>在 LeanCloud -&gt; 存储 -&gt; 创建Class -&gt; 无限制的Class，class 名称为：Comment。<br><img src="/images/step3.png" alt></p><h4 id="安全设置"><a href="#安全设置" class="headerlink" title="安全设置"></a>安全设置</h4><p>在 leancloude -&gt; 设置 -&gt; 安全中心，把除数据存储外其他选项都关闭</p><h3 id="Next中配置valine"><a href="#Next中配置valine" class="headerlink" title="Next中配置valine"></a>Next中配置valine</h3><p>在leancloude -&gt; 设置 -&gt; 应用keys -&gt; 获得 appkey、appid<br>进入主题配置中，找到 <span style="color:red">valine</span>，配置appkey、appid</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true # When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version</span><br><span class="line">  appid:  # Your leancloud application appid</span><br><span class="line">  appkey: # Your leancloud application appkey</span><br><span class="line">  notify: false # Mail notifier. See: https://github.com/xCss/Valine/wiki</span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  placeholder: &apos;ヾﾉ≧∀≦)o来啊，快活啊!&apos; # Comment box placeholder</span><br><span class="line">  avatar: mm # Gravatar style</span><br><span class="line">  guest_info: nick,mail,link # Custom comment header</span><br><span class="line">  pageSize: 10 # Pagination size</span><br></pre></td></tr></table></figure><h3 id="配置CDN"><a href="#配置CDN" class="headerlink" title="配置CDN"></a>配置CDN</h3><p>进入主题配置文件，配置成第三方 CDN</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Valine</span><br><span class="line"> # valine: //cdn.jsdelivr.net/npm/valine@1/dist/Valine.min.js</span><br><span class="line"> # valine: //cdnjs.cloudflare.com/ajax/libs/valine/1.3.10/Valine.min.js</span><br><span class="line"> valine: //cdn.jsdelivr.net/npm/valine@1/dist/Valine.min.js</span><br></pre></td></tr></table></figure><h3 id="指定文章是否开启评论功能"><a href="#指定文章是否开启评论功能" class="headerlink" title="指定文章是否开启评论功能"></a>指定文章是否开启评论功能</h3><p>hexo评论的功能是在所有页面都默认开启的，但是有的时候我们在页面上不需要显示评论功能，例如分类，标记页面。<br>在Front-matter中设置comments: false即可关闭。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2019-11-28</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://tding.top/archives/ed8b904f.html" target="_blank" rel="noopener">https://tding.top/archives/ed8b904f.html</a><br><a href="https://blog.csdn.net/jiunian_2761/article/details/97388997" target="_blank" rel="noopener">https://blog.csdn.net/jiunian_2761/article/details/97388997</a></p>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;script class=&quot;meting-secondary-script-marker&quot; src=&quot;\assets\js\Meting.min.js&quot;&gt;&lt;/script&gt;&lt;h3 id=&quot;注册LeanCloude账号&quot;&gt;&lt;a href=&quot;#注册LeanCloude账号&quot; class=&quot;headerlink&quot; title=&quot;注册LeanCloude账号&quot;&gt;&lt;/a&gt;注册LeanCloude账号&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://github.com/ywAscend/categories/Hexo/"/>
    
    
      <category term="next" scheme="https://github.com/ywAscend/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>hexo主题配置Next</title>
    <link href="https://github.com/ywAscend/2019/11/27/hexo/"/>
    <id>https://github.com/ywAscend/2019/11/27/hexo/</id>
    <published>2019-11-27T08:47:07.000Z</published>
    <updated>2019-11-29T15:16:44.012Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="next开启文章版权板块"><a href="#next开启文章版权板块" class="headerlink" title="next开启文章版权板块"></a>next开启文章版权板块</h3><a id="more"></a><p>1.早期版本<br><a href="https://blog.pangao.vip/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E5%BA%95%E9%83%A8%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/" target="_blank" rel="noopener">教程</a></p><p>2.新版本，本文版本为 7.0.5为例<br>将主题配置中的post改为true，然后 hexo clean, hexo s 刷新文章页面即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: true</span><br><span class="line">  post: true</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;script class=&quot;meting-secondary-script-marker&quot; src=&quot;\assets\js\Meting.min.js&quot;&gt;&lt;/script&gt;&lt;h3 id=&quot;next开启文章版权板块&quot;&gt;&lt;a href=&quot;#next开启文章版权板块&quot; class=&quot;headerlink&quot; title=&quot;next开启文章版权板块&quot;&gt;&lt;/a&gt;next开启文章版权板块&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://github.com/ywAscend/categories/Hexo/"/>
    
    
      <category term="next" scheme="https://github.com/ywAscend/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>git从远程仓库获取最新代码合并到本地分支</title>
    <link href="https://github.com/ywAscend/2019/11/27/usegit/"/>
    <id>https://github.com/ywAscend/2019/11/27/usegit/</id>
    <published>2019-11-27T08:23:56.000Z</published>
    <updated>2019-11-27T09:24:46.207Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这里共展示两类三种方式。</p><a id="more"></a><h3 id="1-git-pull：获取最新代码到本地，并自动合并到当前分支"><a href="#1-git-pull：获取最新代码到本地，并自动合并到当前分支" class="headerlink" title="1.git pull：获取最新代码到本地，并自动合并到当前分支"></a>1.git pull：获取最新代码到本地，并自动合并到当前分支</h3><p>命令展示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//查询当前远程的版本</span><br><span class="line">$ git remote -v </span><br><span class="line">//直接拉取并合并最新代码</span><br><span class="line">$ git pull origin master [示例1：拉取远端origin/master分支并合并到当前分支]</span><br><span class="line">$ git pull origin dev [示例2：拉取远端origin/dev分支并合并到当前分支]</span><br></pre></td></tr></table></figure><p style="color:red">分析：不推荐这种方式，因为是直接合并，无法提前处理冲突。</p><h3 id="2-git-fetch-merge-获取最新代码到本地，然后手动合并分支"><a href="#2-git-fetch-merge-获取最新代码到本地，然后手动合并分支" class="headerlink" title="2.git fetch + merge: 获取最新代码到本地，然后手动合并分支"></a>2.git fetch + merge: 获取最新代码到本地，然后手动合并分支</h3><h4 id="2-1-额外建立本地分支"><a href="#2-1-额外建立本地分支" class="headerlink" title="2.1.额外建立本地分支"></a>2.1.额外建立本地分支</h4><p>代码展示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//查看当前远程的版本</span><br><span class="line">$ git remote -v </span><br><span class="line">//获取最新代码到本地临时分支(本地当前分支为[branch]，获取的远端的分支为[origin/branch])</span><br><span class="line">$ git fetch origin master:master1  [示例1：在本地建立master1分支，并下载远端的origin/master分支到master1分支中]</span><br><span class="line">$ git fetch origin dev:dev1[示例1：在本地建立dev1分支，并下载远端的origin/dev分支到dev1分支中]</span><br><span class="line">//查看版本差异</span><br><span class="line">$ git diff master1 [示例1：查看本地master1分支与当前分支的版本差异]</span><br><span class="line">$ git diff dev1    [示例2：查看本地dev1分支与当前分支的版本差异]</span><br><span class="line">//合并最新分支到本地分支</span><br><span class="line">$ git merge master1    [示例1：合并本地分支master1到当前分支]</span><br><span class="line">$ git merge dev1   [示例2：合并本地分支dev1到当前分支]</span><br><span class="line">//删除本地临时分支</span><br><span class="line">$ git branch -D master1    [示例1：删除本地分支master1]</span><br><span class="line">$ git branch -D dev1 [示例1：删除本地分支dev1]</span><br></pre></td></tr></table></figure><p style="color:red">备注：不推荐这种方式，还需要额外对临时分支进行处理。</p><h3 id="2-2-不额外建立本地分支"><a href="#2-2-不额外建立本地分支" class="headerlink" title="2.2 不额外建立本地分支"></a>2.2 不额外建立本地分支</h3><p>代码展示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//查询当前远程的版本</span><br><span class="line">$ git remote -v</span><br><span class="line">//获取最新代码到本地(本地当前分支为[branch]，获取的远端的分支为[origin/branch])</span><br><span class="line">$ git fetch origin master  [示例1：获取远端的origin/master分支]</span><br><span class="line">$ git fetch origin dev [示例2：获取远端的origin/dev分支]</span><br><span class="line">//查看版本差异</span><br><span class="line">$ git log -p master..origin/master [示例1：查看本地master与远端origin/master的版本差异]</span><br><span class="line">$ git log -p dev..origin/dev   [示例2：查看本地dev与远端origin/dev的版本差异]</span><br><span class="line">//合并最新代码到本地分支</span><br><span class="line">$ git merge origin/master  [示例1：合并远端分支origin/master到当前分支]</span><br><span class="line">$ git merge origin/dev [示例2：合并远端分支origin/dev到当前分支]</span><br></pre></td></tr></table></figure><p style="color:red">备注：推荐这种方式。</p><h3 id="原文链接：https-blog-csdn-net-hanchao5272-article-details-79162130"><a href="#原文链接：https-blog-csdn-net-hanchao5272-article-details-79162130" class="headerlink" title="原文链接：https://blog.csdn.net/hanchao5272/article/details/79162130"></a>原文链接：<a href="https://blog.csdn.net/hanchao5272/article/details/79162130" target="_blank" rel="noopener">https://blog.csdn.net/hanchao5272/article/details/79162130</a></h3><h3 id="git-本地创建远程分支"><a href="#git-本地创建远程分支" class="headerlink" title="git 本地创建远程分支"></a>git 本地创建远程分支</h3><p>$ git branch<br>    * master<br>      release</p><p>新建远程分支</p><p>新建一个本地分支：</p><pre><code>$ git checkout -b dbg_lichen_star</code></pre><p>查看一下现在的分支状态:</p><pre><code>$ git branch* dbg_lichen_star  master  release</code></pre><p>星号(*)表示当前所在分支。现在的状态是成功创建的新的分支并且已经切换到新分支上。</p><p>把新建的本地分支push到远程服务器，远程分支与本地分支同名（当然可以随意起名）：</p><pre><code>$ git push origin dbg_lichen_star:dbg_lichen_star</code></pre><p>使用git branch -a查看所有分支，会看到remotes/origin/dbg_lichen_star这个远程分支，说明新建远程分支成功。<br>删除远程分支</p><p>我比较喜欢的简单方式，推送一个空分支到远程分支，其实就相当于删除远程分支：</p><pre><code>$ git push origin :dbg_lichen_star</code></pre><p>也可以使用：</p><pre><code>$ git push origin --delete dbg_lichen_star</code></pre><p>这两种方式都可以删除指定的远程分支</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><span style="color:red"><a href="https://blog.csdn.net/hanchao5272/article/details/79162130" target="_blank" rel="noopener">https://blog.csdn.net/hanchao5272/article/details/79162130</a></span></p>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;script class=&quot;meting-secondary-script-marker&quot; src=&quot;\assets\js\Meting.min.js&quot;&gt;&lt;/script&gt;&lt;p&gt;这里共展示两类三种方式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="版本控制工具" scheme="https://github.com/ywAscend/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="https://github.com/ywAscend/tags/git/"/>
    
  </entry>
  
</feed>
